$(document).ready(function() {
    if ($("#phrases-count").length && !user.payed) {
        PhrasesCounter.init();
        PhrasesCounter.setCounter(PHRASES_COUNT)
        console.log('init counter')
    }
});
var PhrasesCounter = {
    num1: 0,
    num2: 0,
    num1Wrapper: null,
    num2Wrapper: null,
    num1cell: null,
    num2cell: null,
    num1NextCell: null,
    num2NextCell: null,
    init: function() {
        this.num1Wrapper = $(".j-phraze_counter_wrapper_num_1");
        this.num2Wrapper = $(".j-phraze_counter_wrapper_num_2");
        this.num1cell = this.num1Wrapper.find(".j-phraze_counter_active_num");
        this.num2cell = this.num2Wrapper.find(".j-phraze_counter_active_num");
        this.num1NextCell = this.num1Wrapper.find(".j-phraze_counter_next_num");
        this.num2NextCell = this.num2Wrapper.find(".j-phraze_counter_next_num")
    },
    decrease: function() {
        if (by_plan) return false;
        $("#phrases-count-duplicate").clearQueue().stop().fadeIn(1e3).fadeOut(1e3);
        var num1Next = this.num1 - 1;
        var num2Next = this.num2 - 1;
        if (this.num2 <= 0 && this.num1 > 0) {
            num2Next = 9
        }
        if (this.num1 <= 0) num1Next = 0;
        if (this.num2 <= 0) num2Next = 0;
        if (this.num2 == 0 && this.num1 > 0) {
            num2Next = 9;
            this.num1NextCell.html(num1Next);
            this.num1Wrapper.clearQueue().stop().animate({
                marginTop: "-39px"
            }, 500, function() {
                PhrasesCounter.num1cell.html(num1Next);
                PhrasesCounter.num1Wrapper.css("margin-top", "0px")
            })
        }
        if (this.num2 == 0 && this.num1 == 0) {
            return false
        } else {
            this.num2NextCell.html(num2Next);
            this.num2Wrapper.clearQueue().stop().animate({
                marginTop: "-39px"
            }, 500, function() {
                PhrasesCounter.num2cell.html(num2Next);
                PhrasesCounter.num2Wrapper.css("margin-top", "0px");
                PhrasesCounter.refreshNums()
            })
        }
        $("#phrases-count").data("count", $("#phrases-count").data("count") - 1)
    },
    setCounter: function(num) {
        this.num1Wrapper = $(".j-phraze_counter_wrapper_num_1");
        this.num2Wrapper = $(".j-phraze_counter_wrapper_num_2");
        this.num1cell = this.num1Wrapper.find(".j-phraze_counter_active_num");
        this.num2cell = this.num2Wrapper.find(".j-phraze_counter_active_num");
        this.num1NextCell = this.num1Wrapper.find(".j-phraze_counter_next_num");
        this.num2NextCell = this.num2Wrapper.find(".j-phraze_counter_next_num");
        var num1 = 0,
            num2 = 0;
        if (num < 0) {
            num = 0
        }
        num = num.toString();
        if (num.length == 2) {
            num1 = parseInt(num[0]);
            num2 = parseInt(num[1])
        } else if (num.length == 1) {
            num2 = parseInt(num[0])
        }
        this.num1 = num1;
        this.num2 = num2;
        this.num1cell.html(num1);
        this.num1Wrapper.animate({
            marginTop: "-39px"
        }, 500, function() {
            PhrasesCounter.num1cell.html(num1);
            PhrasesCounter.num1Wrapper.css("margin-top", "0px")
        });
        this.num2cell.html(num2);
        this.num2Wrapper.animate({
            marginTop: "-39px"
        }, 500, function() {
            PhrasesCounter.num2cell.html(num2);
            PhrasesCounter.num2Wrapper.css("margin-top", "0px")
        });
        this.updateData();
        var num1Next = this.num1 - 1;
        var num2Next = this.num2 - 1;
        if (this.num2 <= 0 && this.num1 > 0) {
            num2Next = 9
        }
        if (this.num1 <= 0) num1Next = 0;
        if (this.num2 <= 0) num2Next = 0;
        this.num1NextCell.html(num1Next);
        this.num2NextCell.html(num2Next)
    },
    refreshNums: function() {

        var num = $("#phrases-count").data("count");
        if (typeof num == "undefined") {
            num = $("#phrases-count-duplicate").data("count")
        }
        num = num.toString();
        if (num.length == 2) {
            this.num1 = num[0];
            this.num2 = num[1]
        } else {
            this.num1 = 0;
            this.num2 = num[0]
        }
    },
    updateData: function(count) {
        var _count = parseInt(this.num1.toString() + this.num2.toString());
        if (typeof count != "undefined") _count = count;
        $("#phrases-count").data("count", _count);
        $("#phrases-count-duplicate").data("count", _count);
        this.refreshNums()
    },
    getCount: function() {
        return $("#phrases-count").data("count")
    },
    refreshTime: function() {
        $(".phrases-refresh-time").hide();
        $.post("/", {
            ajax_call: "get_phrases_refresh_time"
        }, function(res) {
            $(".phrases-refresh-time").html(res.time).fadeIn(300)
        }, "json")
    },
    showMessage: function(callback) {
        $.post("/", {
            ajax_action: "ajax_noPhrasesMessage"
        }, function(res) {
            $("#no_phrases_message_wrapper").html(res.html);
            $(".no_phrases_message").show();
            if (callback) callback()
        }, "json")
    }
};